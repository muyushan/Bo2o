server.port=8080
##加入项目ContextPath
server.servlet.context-path=/So2o
spring.thymeleaf.prefix=classpath:/templates/html/
spring.servlet.multipart.max-file-size=5242880
spring.thymeleaf.cache=false
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-paths=src/main/java,resources/static/**,resources/templates/**

#spring.datasource.url=jdbc:mysql://182.92.56.211:3306/o2o?useUnicode=true&characterEncoding=utf8
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/blog?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
## ================使用Alibaba数据库连接池,并对数据密码进行加密====================
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.username=root
spring.datasource.password=KY1WQD+GZdBxeBYBWDMzOOW4kxp63r6wk4hTPOZ75ck+d7DZZSHq1SxAWE8zrBeKPUjFaN9l1jGbITysYKNs+w==
##=================Alibaba数据库连接池相关配置,并配置连接数据时对密码解密==================
spring.datasource.druid.initial-size=5
#spring.datasource.druid.filters=config
spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.connect-properties.config.decrypt=true
spring.datasource.druid.connect-properties.config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMp1rkl7AsJRzHDEswPD4JUjMGE9FczpKLHKQNZdv0mLVyA/HrUgoSMLPEb9VQLxr4l/Tz4PFCV8HNfubR9UfDECAwEAAQ==
#spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMp1rkl7AsJRzHDEswPD4JUjMGE9FczpKLHKQNZdv0mLVyA/HrUgoSMLPEb9VQLxr4l/Tz4PFCV8HNfubR9UfDECAwEAAQ==
spring.datasource.druid.name=blogDateSource
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=50
spring.datasource.druid.max-wait=60000
spring.datasource.druid.validation-query=select 1 from dual
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-return=false
##=============Druid内置提供一个StatFilter，用于统计监控信息========
## 开启监控过滤器
spring.datasource.druid.filter.stat.enabled=true
## 指定数据库类型
spring.datasource.druid.filter.stat.db-type=mysql
#开启慢SQL统计
spring.datasource.druid.filter.stat.log-slow-sql=true
#慢SQL查询时间阈值
spring.datasource.druid.filter.stat.slow-sql-millis=5000
##开启相同SQL合并记录功能
spring.datasource.druid.filter.stat.merge-sql=true
# =================druid内置监控页面配置=====================
##开启内置监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
##监控页面的登录用户名
spring.datasource.druid.stat-view-servlet.login-username=admin
##监控页面的登录密码
spring.datasource.druid.stat-view-servlet.login-password=admin
##监控页面servlet-mapping
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
## 配置是否允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
## 下面这两项是针对监控页面做访问控制配置IP 例如：128.242.127.1/24,128.242.128.1
## deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=
##=====================防御SQL注入攻击更多配置见:https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter=========================
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
#spring.datasource.druid.filter.wall.config.select-all-column-allow=false

##===配置WebStatFilter用于采集web-jdbc关联监控的数据==============
spring.datasource.druid.web-stat-filter.enabled=true
##配置那些请求路径被监控
spring.datasource.druid.web-stat-filter.url-pattern=/*
##排除一些不必要的url
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,*.woff2
##开启Session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=true
##最大session统计数量，默认1000
spring.datasource.druid.web-stat-filter.session-stat-max-count=5000
##使得druid能够知道当前的session的用户是谁 值是保存在session中的sessionName，如果你session中保存的是非string类型的对象，需要重载toString方法==============
#spring.datasource.druid.web-stat-filter.principal-session-name=currentUser
##如果你的user信息保存在cookie中，你可以配置principalCookieName，使得druid知道当前的user是谁
#spring.datasource.druid.web-stat-filter.principal-coolie-name=currentUser
##druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=true
##================配置_Druid和Spring关联监控配置==========================
##spring.aop.auto=false  druid才能监管spring 不知道为什么
spring.aop.auto=false
## 方法名正则匹配拦截配置
spring.datasource.druid.aop-patterns=com.sane.so2o.web.*,com.sane.so2o.service.*,com.sane.so2o.dao.*,com.baomidou.mybatisplus.extension.service;
#================mybatis-plus=================================
mybatis-plus.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis-plus.type-aliases-package=com.sane.so2o.entity
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
##================redis连接配置===================================
spring.redis.database=1
spring.redis.host=127.0.0.1
#spring.redis.password=2Wsx#9Ijn
spring.redis.port=6379
spring.cache.type=redis
spring.cache.redis.time-to-live=3000
##=================log日志记录配置===========================================
logging.file.max-history=1
logging.file.path=/data/logs/webapp/o2o.log
logging.level.root=info
logging.level.sql=debug
logging.level.web=info
##=================SpringMail配置===========================================
spring.mail.host=smtp.126.com
spring.mail.port=25
spring.mail.username=muyushanm@126.com
spring.mail.password=BDSAELOZRPVICNSQ
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
## 连接时间限制
spring.mail.properties.mail.smtp.connectiontimeout=500
## 接收时间限制
spring.mail.properties.mail.smtp.timeout=2000
## 发送时间限制
spring.mail.properties.mail.smtp.writetimeout=2000
spring.main.log-startup-info=true

##================================xxl-job执行器配置============================================
### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
xxl.job.admin.addresses=http://127.0.0.1:8081/xxl-job-admin
### 执行器通讯TOKEN [选填]：非空时启用；
xxl.job.accessToken=
### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
xxl.job.executor.appname=xxl-job-executor-so2o
### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
xxl.job.executor.address=
### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
xxl.job.executor.ip=
### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
xxl.job.executor.port=9999
### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
xxl.job.executor.logpath=/Users/lixiuli/data/logs/xxl-job/jobhandler
### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
xxl.job.executor.logretentiondays=30

##===================================自定义的配置================================================
so2o.regist.verifycode.expire=5
spring.security.remberme.salt=$rfv3edc